plugins {
    id 'com.android.application'
    id 'com.github.kt3k.coveralls'
    id 'com.google.gms.google-services'
//    id 'io.fabric'
}
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId "com.w3engineers.unicef.telemesh"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 13
        versionName "0.1.2-beta"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        externalNativeBuild {
            cmake {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false

            testCoverageEnabled true

/*            buildConfigField 'String', 'BROADCAST_URL', System.getenv('BROADCAST_URL').equals(null) ? BROADCAST_URL : System.getenv('BROADCAST_URL')
            buildConfigField 'String', 'BROADCAST_TOKEN', System.getenv('BROADCAST_TOKEN').equals(null) ? BROADCAST_TOKEN : System.getenv('BROADCAST_TOKEN')
            buildConfigField 'String', 'PARSE_URL', System.getenv('PARSE_URL').equals(null) ? PARSE_URL : System.getenv('PARSE_URL')
            buildConfigField 'String', 'PARSE_APP_ID', System.getenv('PARSE_APP_ID').equals(null) ? PARSE_APP_ID : System.getenv('PARSE_APP_ID')

            buildConfigField 'String', 'AUTH_USER_NAME', System.getenv('AUTH_USER_NAME').equals(null) ? AUTH_USER_NAME : System.getenv('AUTH_USER_NAME')
            buildConfigField 'String', 'AUTH_PASSWORD', System.getenv('AUTH_PASSWORD').equals(null) ? AUTH_PASSWORD : System.getenv('AUTH_PASSWORD')
            buildConfigField 'String', 'FILE_REPO_LINK', System.getenv('FILE_REPO_LINK').equals(null) ? FILE_REPO_LINK : System.getenv('FILE_REPO_LINK')*/
        }
        release {
            debuggable false
            //  minifyEnabled true
            //  shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

/*            buildConfigField 'String', 'BROADCAST_URL', System.getenv('BROADCAST_URL').equals(null) ? BROADCAST_URL : System.getenv('BROADCAST_URL')
            buildConfigField 'String', 'BROADCAST_TOKEN', System.getenv('BROADCAST_TOKEN').equals(null) ? BROADCAST_TOKEN : System.getenv('BROADCAST_TOKEN')
            buildConfigField 'String', 'PARSE_URL', System.getenv('PARSE_URL').equals(null) ? PARSE_URL : System.getenv('PARSE_URL')
            buildConfigField 'String', 'PARSE_APP_ID', System.getenv('PARSE_APP_ID').equals(null) ? PARSE_APP_ID : System.getenv('PARSE_APP_ID')

            buildConfigField 'String', 'AUTH_USER_NAME', System.getenv('AUTH_USER_NAME').equals(null) ? AUTH_USER_NAME : System.getenv('AUTH_USER_NAME')
            buildConfigField 'String', 'AUTH_PASSWORD', System.getenv('AUTH_PASSWORD').equals(null) ? AUTH_PASSWORD : System.getenv('AUTH_PASSWORD')
            buildConfigField 'String', 'FILE_REPO_LINK', System.getenv('FILE_REPO_LINK').equals(null) ? FILE_REPO_LINK : System.getenv('FILE_REPO_LINK')*/
        }
    }
    lintOptions {

        htmlReport true
        htmlOutput file("../docs/lint_reports/lint-report.html")

        abortOnError false
        warningsAsErrors false
        checkAllWarnings false

        disable 'InvalidPackage'
    }
    /*dataBinding {
        enabled = true
    }*/

    buildFeatures {
        dataBinding true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }


    externalNativeBuild {
        cmake {
            //path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    testOptions {
        animationsDisabled = true
        unitTests.all {
            // All the usual Gradle options.
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Support

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    /*implementation deps.support.app_compat
    implementation deps.support.design
    implementation deps.constraint_layout
    implementation deps.support.recyclerview
    implementation deps.support.cardview
    implementation deps.support.animated_vector_drawable
    implementation deps.support.media_compact
    implementation deps.support.v4*/

    //lifecycle
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'androidx.test.ext:junit:1.1.3'
    annotationProcessor deps.lifecycle.compiler
//    api deps.strom_remote

    //LiveDataReactStream
    implementation deps.livedata_reactive

    //Crashlytics
    //  implementation 'com.google.firebase:firebase-analytics:17.2.2'
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    //room with Rx
    implementation deps.room.runtime
    implementation deps.room.rxjava2
    annotationProcessor deps.room.compiler

    // RxJava
    implementation deps.rx_android
    implementation deps.rxjava2

    //Paging
    //implementation deps.paging.runtime
    implementation 'androidx.paging:paging-runtime:3.0.1'
    //

    //Circular Image
    implementation deps.circularimage.runtime

    //Retrofit
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.okhttp_logging_interceptor

    // Dependencies for local unit tests
    testImplementation deps.junit
    testImplementation deps.arch_core.testing
    testImplementation deps.truth
    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib

    androidTestImplementation deps.room.testing
    androidTestImplementation deps.arch_core.testing // It is mandatory for live data test
    androidTestImplementation deps.uiautomator.automator

    implementation deps.rxbinding.binding2

    // Glide
    implementation deps.glide
    implementation deps.multidex

    //this bottom bar library is used as experiment.
    //Too much dependency on this library must be avoided
    implementation deps.bottom_nav.navigation
    // shimmer effect
    implementation deps.fb_shimmer.shimmer

    implementation deps.zxing.core
    implementation deps.dexter.dexter

    implementation deps.parse.server
    implementation deps.work.runtime
    implementation deps.work.testing

    implementation deps.location.service

    implementation deps.appupdater.update

    implementation deps.ripplebg.ripple
    implementation deps.qrgenerator.qr
    implementation deps.playcore.core

    implementation 'com.zhihu.android:matisse:0.5.3-beta3'
    implementation 'io.github.lucksiege:pictureselector:v2.7.3-rc08'
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation 'com.github.jakob-grabner:Circle-Progress-View:1.4'
    implementation 'com.iceteck.silicompressorr:silicompressor:2.2.3'
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    api deps.app_share
    api deps.local_server
    debugImplementation deps.inappstoragereader

    /*implementation ('com.w3engineers.mesh:viper:0.0.1-alpha-test17:release@aar'){
        transitive=true
    }*/
//    implementation deps.viper
//    implementation project(path: ':viper')
    implementation 'com.github.w3-engineers:Viper-V2:v2.2.5'

    def dagger_version = "2.32"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/coverage/debug/report.xml"
}

tasks.coveralls {
    dependsOn 'connectedAndroidTest'
    onlyIf { System.env.'CI' }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
repositories {
    mavenCentral()
}




