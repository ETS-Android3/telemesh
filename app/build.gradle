plugins {
    id 'com.android.application'
    id 'com.github.kt3k.coveralls'
    id 'com.google.protobuf'
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.w3engineers.unicef.telemesh"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 21
        versionName "0.2.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            testCoverageEnabled true

            buildConfigField 'String', 'BROADCAST_URL', System.getenv('BROADCAST_URL').equals(null) ? BROADCAST_URL : System.getenv('BROADCAST_URL')
            buildConfigField 'String', 'BROADCAST_TOKEN', System.getenv('BROADCAST_TOKEN').equals(null) ? BROADCAST_TOKEN : System.getenv('BROADCAST_TOKEN')
            buildConfigField 'String', 'PARSE_URL', System.getenv('PARSE_URL').equals(null) ? PARSE_URL : System.getenv('PARSE_URL')
            buildConfigField 'String', 'PARSE_APP_ID', System.getenv('PARSE_APP_ID').equals(null) ? PARSE_APP_ID : System.getenv('PARSE_APP_ID')
        }
        release {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', 'BROADCAST_URL', System.getenv('BROADCAST_URL').equals(null) ? BROADCAST_URL : System.getenv('BROADCAST_URL')
            buildConfigField 'String', 'BROADCAST_TOKEN', System.getenv('BROADCAST_TOKEN').equals(null) ? BROADCAST_TOKEN : System.getenv('BROADCAST_TOKEN')
            buildConfigField 'String', 'PARSE_URL', System.getenv('PARSE_URL').equals(null) ? PARSE_URL : System.getenv('PARSE_URL')
            buildConfigField 'String', 'PARSE_APP_ID', System.getenv('PARSE_APP_ID').equals(null) ? PARSE_APP_ID : System.getenv('PARSE_APP_ID')
        }

    }
    lintOptions {

        htmlReport true
        htmlOutput file("../docs/lint_reports/lint-report.html")

        abortOnError true
        warningsAsErrors true
        checkAllWarnings true

        disable 'InvalidPackage'
    }
    dataBinding {
        enabled = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }

//    externalNativeBuild {
//        cmake {
//            path 'src/CMakeLists.txt'
//        }
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Support
    implementation deps.support.app_compat
    implementation deps.support.design
    implementation deps.constraint_layout
    implementation deps.support.recyclerview
    implementation deps.support.cardview

    //lifecycle
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    annotationProcessor deps.lifecycle.compiler

    //LiveDataReactStream
    implementation deps.livedata_reactive

    //room with Rx
    implementation deps.room.runtime
    implementation deps.room.rxjava2
    annotationProcessor deps.room.compiler

    // RxJava
    implementation deps.rx_android
    implementation deps.rxjava2

    //Paging
    implementation deps.paging.runtime
    //

    //Circular Image
    implementation deps.circularimage.runtime

    //Retrofit
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.okhttp_logging_interceptor

    // Dependencies for local unit tests
    testImplementation deps.junit
    testImplementation deps.arch_core.testing
    testImplementation deps.truth
    androidTestImplementation deps.atsl.rules
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core

    androidTestImplementation deps.room.testing
    androidTestImplementation deps.arch_core.testing // It is mandatory for live data test
    androidTestImplementation deps.uiautomator.automator

    implementation deps.rxbinding.binding2

    // Glide
    implementation deps.glide
    implementation deps.multidex

    //this bottom bar library is used as experiment.
    //Too much dependency on this library must be avoided
    implementation deps.bottom_nav.navigation
    // shimmer effect
    implementation deps.fb_shimmer.shimmer

    implementation deps.zxing.core
    implementation deps.protobuf.lite
    implementation deps.dexter.dexter
    implementation deps.appshare.share

    implementation deps.parse.server
    implementation deps.work.runtime
    implementation deps.work.testing

    api deps.framework
    api deps.mesh
    api deps.pay
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/coverage/debug/report.xml"
}

tasks.coveralls {
    dependsOn 'connectedAndroidTest'
    onlyIf { System.env.'CI' }
}

// protobuf-start
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}